
package PAT;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
/*
InventorySearchGUI class
Used as interface for the user to find the ingredient in the database they are looking for
*/
public class InventorySearchGUI extends javax.swing.JFrame {
    String userWelcome = ""; //Welcome message displayed in Main GUI
    String userType = ""; //Type of the current user
    String foundID = ""; //ID of the ingredient found
    Stock sto = new Stock(); // An instance of the stock class
    ResultSet rs; //Resultset to store the data received from the stock class
    /*
    Constructor Method #1
    Used to create an instance of the class
    @parameters: String user type, string Welcome message
    @return: nothing
    */
    public InventorySearchGUI(String _userType, String _userWelcome) {
        userType = _userType;
        userWelcome = _userWelcome;
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        lblInventorySearch = new javax.swing.JLabel();
        btnInventorySearchHelp = new javax.swing.JButton();
        txtFieldItemNameSearch = new javax.swing.JTextField();
        btnFind = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFoundItems = new javax.swing.JTable();
        lblItemID = new javax.swing.JLabel();
        txtFieldSearchID = new javax.swing.JTextField();
        btnSelect = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnBack.setText("BACK");
        btnBack.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblInventorySearch.setBackground(new java.awt.Color(255, 255, 255));
        lblInventorySearch.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblInventorySearch.setText("Inventory Search");
        lblInventorySearch.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        btnInventorySearchHelp.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnInventorySearchHelp.setText("Help");
        btnInventorySearchHelp.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        btnInventorySearchHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInventorySearchHelpActionPerformed(evt);
            }
        });

        txtFieldItemNameSearch.setText("Enter Item Here");
        txtFieldItemNameSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtFieldItemNameSearchMouseClicked(evt);
            }
        });

        btnFind.setText("Find");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        tblFoundItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "itemID", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblFoundItems.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblFoundItemsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblFoundItems);

        lblItemID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblItemID.setText("ID:");

        txtFieldSearchID.setEditable(false);
        txtFieldSearchID.setBackground(new java.awt.Color(255, 255, 255));

        btnSelect.setText("Select");
        btnSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblItemID)
                        .addGap(31, 31, 31)
                        .addComponent(txtFieldSearchID, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(121, 121, 121))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtFieldItemNameSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(btnFind, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblInventorySearch, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnInventorySearchHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSelect)
                .addGap(160, 160, 160))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInventorySearch, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInventorySearchHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFieldItemNameSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFind))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFieldSearchID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblItemID))
                .addGap(18, 18, 18)
                .addComponent(btnSelect)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /*
    Method of the back button
    Closes the InventorySearchGUI and opens the StockGUI
    */
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        StockGUI sto = new StockGUI(userType, userWelcome);
        sto.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnBackActionPerformed
    /*
    Method of the help button
    Opens the help text
    */
    private void btnInventorySearchHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInventorySearchHelpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnInventorySearchHelpActionPerformed
    /*
    Method txtFieldItemNameSearchMouseClicked
    Clears the existing text when the user clicks on the text field
    */
    private void txtFieldItemNameSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtFieldItemNameSearchMouseClicked
        txtFieldItemNameSearch.setText("");
    }//GEN-LAST:event_txtFieldItemNameSearchMouseClicked
    /*
    Method of the find button
    Updates the table with ingredients that match the name input of the user
    */
    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        String name = txtFieldItemNameSearch.getText(); //Gets the input ingredient name
        updateSearchTable(name); //method that updates the table with ingridients that match
    }//GEN-LAST:event_btnFindActionPerformed
    /*
    Method tblFoundItemsMouseClicked
    Checks what ingredient was chosen and loads the ingredient ID into the
    text ield
    */
    private void tblFoundItemsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblFoundItemsMouseClicked
        int row = tblFoundItems.rowAtPoint(evt.getPoint()); //gets the row of the chosen ingredient
        txtFieldSearchID.setText((String)tblFoundItems.getValueAt(row, 0)); //Records ingredient ID
    }//GEN-LAST:event_tblFoundItemsMouseClicked
    /*
    Method of the select button
    Sends the ID of the found ingredient to the StockGUI class and then closes the InventorySearchGUI
    */
    private void btnSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectActionPerformed
        if(txtFieldSearchID.getText().isEmpty() == false){ //Checks to  see that ingredient is selected
            foundID = txtFieldSearchID.getText(); //retrieve the found ID
            StockGUI sto = new StockGUI(userType, userWelcome, foundID);
            sto.setVisible(true);
            dispose();
        }else{
            //Adivse the user to select a user first
            JOptionPane.showMessageDialog(null, "No stock item is selected. Please select an item.");
        }
    }//GEN-LAST:event_btnSelectActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InventorySearchGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InventorySearchGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InventorySearchGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InventorySearchGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InventorySearchGUI("","").setVisible(true);
            }
        });
    }
    /*
    Method UpdateSearchTable
    Inserts all the ingredients that match the input name into the table
    @parameters: String ingredient name provided by the user
    @return: none
    */
    private void updateSearchTable(String _name){
        clearTable();
        try {
            rs = sto.findItem(_name); //get items that match the name provided by users
            while(rs.next()){
                //extract info of the ingredients from the resultset
                String ID = rs.getString("itemID");
                String name = rs.getString("itemName");
                
                String data[] = {ID, name};
                
                DefaultTableModel model = (DefaultTableModel)tblFoundItems.getModel();
                //add info to the table 
                model.addRow(data);
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(InventorySearchGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /*
    Method clearTable
    Clears the table of the current information it holds
    @parameters: none
    @return: none
    */
    private void clearTable(){
        DefaultTableModel model = (DefaultTableModel)tblFoundItems.getModel();
        while(model.getRowCount()> 0){
            model.removeRow(0);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnInventorySearchHelp;
    private javax.swing.JButton btnSelect;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblInventorySearch;
    private javax.swing.JLabel lblItemID;
    private javax.swing.JTable tblFoundItems;
    private javax.swing.JTextField txtFieldItemNameSearch;
    private javax.swing.JTextField txtFieldSearchID;
    // End of variables declaration//GEN-END:variables
}
